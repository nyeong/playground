# 문제 분석
#   다리를 칸으로 생각하자. bridge_length=2이면 다리는 두 칸
#   1초에 한 칸 씩 전진하므로
#     0일때 [ | ]←[7|4|5|6]
#     1일때 [ |7]←[4|5|6| ]
#     2일때 [7| ]←[4|5|6| ] # weight = 10이라 못올라갔음
#     3일때 [ |4]←[5|6| | ] 이런식
# 접근
#   하라는 대로 한다. 해보는 수 밖에 없을듯.
#   
# 2016년도에 풀었던 문제
from collections import deque
def solution(다리길이제한, 다리무게제한, truck_weights):
    '''
    bridge_length: 트럭이 올라갈 수 있는 최대 수
    weight: 다리가 견딜 수 있는 무게
    truck_weights: [트럭의 무게]
    '''
    다리트럭 = deque() # [(무게, 다리에 오른 시각)]
    대기트럭 = deque(truck_weights)
    다리무게 = 0
    시간 = 0
    
    while 대기트럭 or 다리트럭:
        if 다리트럭 and 시간 - 다리트럭[0][1] == 다리길이제한:
            (나간트럭, _) = 다리트럭.popleft()
            다리무게 -= 나간트럭
        if 대기트럭 and 다리무게 + 대기트럭[0] <= 다리무게제한 and len(다리트럭) + 1 <= 다리길이제한:
            출발트럭 = 대기트럭.popleft()
            다리무게 += 출발트럭
            다리트럭.append((출발트럭, 시간))
        시간 += 1
    return 시간