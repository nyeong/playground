#!/usr/bin/env python
import argparse
from random import randint

def generate(n, m, max=100):
	if not n or not 0 < n <= 200_000:
		print('n is not valid')
		exit()
	elif not m or not 0 < m <= 100:
		print('b is not valid')
		exit()
	elif n < m:
		print('m is must small than n')
		exit()
	print(n, m)
	a = [str(randint(1, max)) for _ in range(n)]
	b = [str(randint(1, max)) for _ in range(m)]
	print(' '.join(a))
	print(' '.join(b))

	
if __name__ == '__main__':
	parser = argparse.ArgumentParser()
	parser.add_argument('-n', '--n', type=int, help='size of n')
	parser.add_argument('-m', '--m', type=int, help='size of m')
	parser.add_argument('-M', '--max', type=int, help='max size of each element. omit is 100')
	args = parser.parse_args()
	generate(args.n, args.m, max=args.max)
